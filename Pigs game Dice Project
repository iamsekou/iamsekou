import random
# allows for us to generate random numbers

def roll():
    min_value = 1
    max_value = 6
    roll = random.randint(min_value, max_value)
    
    return roll


# lines 4-12 created a function called roll which has a minimum value of 1-6 and rolls random values.

# Get the number of players between 2 and 4
while True:
    players = input("Enter the number of players: (2 - 4): ")
    if players.isdigit():
        players = int(players) 
        if 2 <= players <= 4:
            break
        else:
            print("Error, " + str(players) + " isn't valid. Must be between 2-4 players")
    else:
        print("Invalid, try again.")

# lines 16-27: Allows for the user to INPUT an answer between 2-4. 
# Checks to see if the input is a digit/number
# converts the string from line 17 to an integer. If # chosen is btw 2-4, code ends. 
# if # isn't between 2-4, prints error. If it's not a #, prints invalid.

max_score = 50
player_scores = [0 for _ in range(players)]

# Simulate each player's turn
while max(player_scores) < max_score:
    for player_idx in range(players):
        print("\nPlayer number", player_idx + 1, "turn has just started!")
        print("Your total score is:", player_scores[player_idx], "\n")
        current_score = 0
    
        while True:
            should_roll = input("Would you like to roll (y)? ")
            if should_roll.lower() != "y":
                break
    
            value = roll()
            if value == 1:
                print("You rolled a 1! Turn done!")
                current_score = 0
                break
            else:
                current_score += value
                print("You rolled a:", value)     
        
            print("Your score is:", current_score)
    
        player_scores[player_idx] += current_score
        print("Your total score is:", player_scores[player_idx])

max_score = max(player_scores)
winning_idx = player_scores.index(max_score)
print("Player number", winning_idx + 1, "is the winner with a score of: ", max_score)

    
    
    

